// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedOwner extends ethereum.Event {
  get params(): AddedOwner__Params {
    return new AddedOwner__Params(this);
  }
}

export class AddedOwner__Params {
  _event: AddedOwner;

  constructor(event: AddedOwner) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Batch1155Received extends ethereum.Event {
  get params(): Batch1155Received__Params {
    return new Batch1155Received__Params(this);
  }
}

export class Batch1155Received__Params {
  _event: Batch1155Received;

  constructor(event: Batch1155Received) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class ERC1155Received extends ethereum.Event {
  get params(): ERC1155Received__Params {
    return new ERC1155Received__Params(this);
  }
}

export class ERC1155Received__Params {
  _event: ERC1155Received;

  constructor(event: ERC1155Received) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ERC721Received extends ethereum.Event {
  get params(): ERC721Received__Params {
    return new ERC721Received__Params(this);
  }
}

export class ERC721Received__Params {
  _event: ERC721Received;

  constructor(event: ERC721Received) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ERC777Received extends ethereum.Event {
  get params(): ERC777Received__Params {
    return new ERC777Received__Params(this);
  }
}

export class ERC777Received__Params {
  _event: ERC777Received;

  constructor(event: ERC777Received) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ETHReceived extends ethereum.Event {
  get params(): ETHReceived__Params {
    return new ETHReceived__Params(this);
  }
}

export class ETHReceived__Params {
  _event: ETHReceived;

  constructor(event: ETHReceived) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EditionMinted extends ethereum.Event {
  get params(): EditionMinted__Params {
    return new EditionMinted__Params(this);
  }
}

export class EditionMinted__Params {
  _event: EditionMinted;

  constructor(event: EditionMinted) {
    this._event = event;
  }

  get editionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get editionSize(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NameChanged extends ethereum.Event {
  get params(): NameChanged__Params {
    return new NameChanged__Params(this);
  }
}

export class NameChanged__Params {
  _event: NameChanged;

  constructor(event: NameChanged) {
    this._event = event;
  }

  get newName(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class ProxySetup extends ethereum.Event {
  get params(): ProxySetup__Params {
    return new ProxySetup__Params(this);
  }
}

export class ProxySetup__Params {
  _event: ProxySetup;

  constructor(event: ProxySetup) {
    this._event = event;
  }

  get owners(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class RemovedOwner extends ethereum.Event {
  get params(): RemovedOwner__Params {
    return new RemovedOwner__Params(this);
  }
}

export class RemovedOwner__Params {
  _event: RemovedOwner;

  constructor(event: RemovedOwner) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TransferERC20 extends ethereum.Event {
  get params(): TransferERC20__Params {
    return new TransferERC20__Params(this);
  }
}

export class TransferERC20__Params {
  _event: TransferERC20;

  constructor(event: TransferERC20) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TransferETH extends ethereum.Event {
  get params(): TransferETH__Params {
    return new TransferETH__Params(this);
  }
}

export class TransferETH__Params {
  _event: TransferETH;

  constructor(event: TransferETH) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get success(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class WindowIncremented extends ethereum.Event {
  get params(): WindowIncremented__Params {
    return new WindowIncremented__Params(this);
  }
}

export class WindowIncremented__Params {
  _event: WindowIncremented;

  constructor(event: WindowIncremented) {
    this._event = event;
  }

  get currentWindow(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundsAvailable(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OurPylon extends ethereum.SmartContract {
  static bind(address: Address): OurPylon {
    return new OurPylon("OurPylon", address);
  }

  PERCENTAGE_SCALE(): BigInt {
    let result = super.call(
      "PERCENTAGE_SCALE",
      "PERCENTAGE_SCALE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PERCENTAGE_SCALE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PERCENTAGE_SCALE",
      "PERCENTAGE_SCALE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _mirrorCrowdfund(): Address {
    let result = super.call(
      "_mirrorCrowdfund",
      "_mirrorCrowdfund():(address)",
      []
    );

    return result[0].toAddress();
  }

  try__mirrorCrowdfund(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_mirrorCrowdfund",
      "_mirrorCrowdfund():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _partyBid(): Address {
    let result = super.call("_partyBid", "_partyBid():(address)", []);

    return result[0].toAddress();
  }

  try__partyBid(): ethereum.CallResult<Address> {
    let result = super.tryCall("_partyBid", "_partyBid():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _zoraAH(): Address {
    let result = super.call("_zoraAH", "_zoraAH():(address)", []);

    return result[0].toAddress();
  }

  try__zoraAH(): ethereum.CallResult<Address> {
    let result = super.tryCall("_zoraAH", "_zoraAH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _zoraEditions(): Address {
    let result = super.call("_zoraEditions", "_zoraEditions():(address)", []);

    return result[0].toAddress();
  }

  try__zoraEditions(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_zoraEditions",
      "_zoraEditions():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _zoraMarket(): Address {
    let result = super.call("_zoraMarket", "_zoraMarket():(address)", []);

    return result[0].toAddress();
  }

  try__zoraMarket(): ethereum.CallResult<Address> {
    let result = super.tryCall("_zoraMarket", "_zoraMarket():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _zoraMedia(): Address {
    let result = super.call("_zoraMedia", "_zoraMedia():(address)", []);

    return result[0].toAddress();
  }

  try__zoraMedia(): ethereum.CallResult<Address> {
    let result = super.tryCall("_zoraMedia", "_zoraMedia():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceForWindow(param0: BigInt): BigInt {
    let result = super.call(
      "balanceForWindow",
      "balanceForWindow(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_balanceForWindow(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceForWindow",
      "balanceForWindow(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentWindow(): BigInt {
    let result = super.call("currentWindow", "currentWindow():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentWindow(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentWindow",
      "currentWindow():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwners(): Array<Address> {
    let result = super.call("getOwners", "getOwners():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getOwners(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getOwners", "getOwners():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  isClaimed(window: BigInt, account: Address): boolean {
    let result = super.call("isClaimed", "isClaimed(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(window),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isClaimed(
    window: BigInt,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isClaimed",
      "isClaimed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(window),
        ethereum.Value.fromAddress(account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(owner: Address): boolean {
    let result = super.call("isOwner", "isOwner(address):(bool)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBoolean();
  }

  try_isOwner(owner: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner(address):(bool)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  merkleRoot(): Bytes {
    let result = super.call("merkleRoot", "merkleRoot():(bytes32)", []);

    return result[0].toBytes();
  }

  try_merkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("merkleRoot", "merkleRoot():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155BatchReceived(
    operator: Address,
    from: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    operator: Address,
    from: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    operator: Address,
    from: Address,
    id: BigInt,
    value: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    operator: Address,
    from: Address,
    id: BigInt,
    value: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    operator_: Address,
    from_: Address,
    tokenId_: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator_),
        ethereum.Value.fromAddress(from_),
        ethereum.Value.fromUnsignedBigInt(tokenId_),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    operator_: Address,
    from_: Address,
    tokenId_: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator_),
        ethereum.Value.fromAddress(from_),
        ethereum.Value.fromUnsignedBigInt(tokenId_),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  scaleAmountByPercentage(amount: BigInt, scaledPercent: BigInt): BigInt {
    let result = super.call(
      "scaleAmountByPercentage",
      "scaleAmountByPercentage(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(scaledPercent)
      ]
    );

    return result[0].toBigInt();
  }

  try_scaleAmountByPercentage(
    amount: BigInt,
    scaledPercent: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "scaleAmountByPercentage",
      "scaleAmountByPercentage(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(scaledPercent)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptZoraMarketBidCall extends ethereum.Call {
  get inputs(): AcceptZoraMarketBidCall__Inputs {
    return new AcceptZoraMarketBidCall__Inputs(this);
  }

  get outputs(): AcceptZoraMarketBidCall__Outputs {
    return new AcceptZoraMarketBidCall__Outputs(this);
  }
}

export class AcceptZoraMarketBidCall__Inputs {
  _call: AcceptZoraMarketBidCall;

  constructor(call: AcceptZoraMarketBidCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expectedBid(): AcceptZoraMarketBidCallExpectedBidStruct {
    return changetype<AcceptZoraMarketBidCallExpectedBidStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AcceptZoraMarketBidCall__Outputs {
  _call: AcceptZoraMarketBidCall;

  constructor(call: AcceptZoraMarketBidCall) {
    this._call = call;
  }
}

export class AcceptZoraMarketBidCallExpectedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): AcceptZoraMarketBidCallExpectedBidSellOnShareStruct {
    return changetype<AcceptZoraMarketBidCallExpectedBidSellOnShareStruct>(
      this[4].toTuple()
    );
  }
}

export class AcceptZoraMarketBidCallExpectedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AddOwnerCall extends ethereum.Call {
  get inputs(): AddOwnerCall__Inputs {
    return new AddOwnerCall__Inputs(this);
  }

  get outputs(): AddOwnerCall__Outputs {
    return new AddOwnerCall__Outputs(this);
  }
}

export class AddOwnerCall__Inputs {
  _call: AddOwnerCall;

  constructor(call: AddOwnerCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOwnerCall__Outputs {
  _call: AddOwnerCall;

  constructor(call: AddOwnerCall) {
    this._call = call;
  }
}

export class CancelZoraAuctionCall extends ethereum.Call {
  get inputs(): CancelZoraAuctionCall__Inputs {
    return new CancelZoraAuctionCall__Inputs(this);
  }

  get outputs(): CancelZoraAuctionCall__Outputs {
    return new CancelZoraAuctionCall__Outputs(this);
  }
}

export class CancelZoraAuctionCall__Inputs {
  _call: CancelZoraAuctionCall;

  constructor(call: CancelZoraAuctionCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelZoraAuctionCall__Outputs {
  _call: CancelZoraAuctionCall;

  constructor(call: CancelZoraAuctionCall) {
    this._call = call;
  }
}

export class ClaimERC20ForAllCall extends ethereum.Call {
  get inputs(): ClaimERC20ForAllCall__Inputs {
    return new ClaimERC20ForAllCall__Inputs(this);
  }

  get outputs(): ClaimERC20ForAllCall__Outputs {
    return new ClaimERC20ForAllCall__Outputs(this);
  }
}

export class ClaimERC20ForAllCall__Inputs {
  _call: ClaimERC20ForAllCall;

  constructor(call: ClaimERC20ForAllCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get accounts(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get allocations(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get merkleProofs(): Array<ClaimERC20ForAllCallMerkleProofsStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      ClaimERC20ForAllCallMerkleProofsStruct
    >();
  }
}

export class ClaimERC20ForAllCall__Outputs {
  _call: ClaimERC20ForAllCall;

  constructor(call: ClaimERC20ForAllCall) {
    this._call = call;
  }
}

export class ClaimERC20ForAllCallMerkleProofsStruct extends ethereum.Tuple {
  get merkleProof(): Array<Bytes> {
    return this[0].toBytesArray();
  }
}

export class ClaimETHCall extends ethereum.Call {
  get inputs(): ClaimETHCall__Inputs {
    return new ClaimETHCall__Inputs(this);
  }

  get outputs(): ClaimETHCall__Outputs {
    return new ClaimETHCall__Outputs(this);
  }
}

export class ClaimETHCall__Inputs {
  _call: ClaimETHCall;

  constructor(call: ClaimETHCall) {
    this._call = call;
  }

  get window(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get scaledPercentageAllocation(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class ClaimETHCall__Outputs {
  _call: ClaimETHCall;

  constructor(call: ClaimETHCall) {
    this._call = call;
  }
}

export class ClaimETHForAllWindowsCall extends ethereum.Call {
  get inputs(): ClaimETHForAllWindowsCall__Inputs {
    return new ClaimETHForAllWindowsCall__Inputs(this);
  }

  get outputs(): ClaimETHForAllWindowsCall__Outputs {
    return new ClaimETHForAllWindowsCall__Outputs(this);
  }
}

export class ClaimETHForAllWindowsCall__Inputs {
  _call: ClaimETHForAllWindowsCall;

  constructor(call: ClaimETHForAllWindowsCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get percentageAllocation(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class ClaimETHForAllWindowsCall__Outputs {
  _call: ClaimETHForAllWindowsCall;

  constructor(call: ClaimETHForAllWindowsCall) {
    this._call = call;
  }
}

export class CreateMirrorCrowdfundCall extends ethereum.Call {
  get inputs(): CreateMirrorCrowdfundCall__Inputs {
    return new CreateMirrorCrowdfundCall__Inputs(this);
  }

  get outputs(): CreateMirrorCrowdfundCall__Outputs {
    return new CreateMirrorCrowdfundCall__Outputs(this);
  }
}

export class CreateMirrorCrowdfundCall__Inputs {
  _call: CreateMirrorCrowdfundCall;

  constructor(call: CreateMirrorCrowdfundCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get operator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get fundingRecipient(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get fundingCap(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get operatorPercent(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateMirrorCrowdfundCall__Outputs {
  _call: CreateMirrorCrowdfundCall;

  constructor(call: CreateMirrorCrowdfundCall) {
    this._call = call;
  }
}

export class CreateZoraAuctionCall extends ethereum.Call {
  get inputs(): CreateZoraAuctionCall__Inputs {
    return new CreateZoraAuctionCall__Inputs(this);
  }

  get outputs(): CreateZoraAuctionCall__Outputs {
    return new CreateZoraAuctionCall__Outputs(this);
  }
}

export class CreateZoraAuctionCall__Inputs {
  _call: CreateZoraAuctionCall;

  constructor(call: CreateZoraAuctionCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reservePrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get curator(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get curatorFeePercentage(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get auctionCurrency(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class CreateZoraAuctionCall__Outputs {
  _call: CreateZoraAuctionCall;

  constructor(call: CreateZoraAuctionCall) {
    this._call = call;
  }
}

export class CreateZoraEditionCall extends ethereum.Call {
  get inputs(): CreateZoraEditionCall__Inputs {
    return new CreateZoraEditionCall__Inputs(this);
  }

  get outputs(): CreateZoraEditionCall__Outputs {
    return new CreateZoraEditionCall__Outputs(this);
  }
}

export class CreateZoraEditionCall__Inputs {
  _call: CreateZoraEditionCall;

  constructor(call: CreateZoraEditionCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _animationUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _animationHash(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _imageUrl(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _imageHash(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get _editionSize(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _royaltyBPS(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class CreateZoraEditionCall__Outputs {
  _call: CreateZoraEditionCall;

  constructor(call: CreateZoraEditionCall) {
    this._call = call;
  }
}

export class EditNicknameCall extends ethereum.Call {
  get inputs(): EditNicknameCall__Inputs {
    return new EditNicknameCall__Inputs(this);
  }

  get outputs(): EditNicknameCall__Outputs {
    return new EditNicknameCall__Outputs(this);
  }
}

export class EditNicknameCall__Inputs {
  _call: EditNicknameCall;

  constructor(call: EditNicknameCall) {
    this._call = call;
  }

  get newName_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class EditNicknameCall__Outputs {
  _call: EditNicknameCall;

  constructor(call: EditNicknameCall) {
    this._call = call;
  }
}

export class IncrementThenClaimAllCall extends ethereum.Call {
  get inputs(): IncrementThenClaimAllCall__Inputs {
    return new IncrementThenClaimAllCall__Inputs(this);
  }

  get outputs(): IncrementThenClaimAllCall__Outputs {
    return new IncrementThenClaimAllCall__Outputs(this);
  }
}

export class IncrementThenClaimAllCall__Inputs {
  _call: IncrementThenClaimAllCall;

  constructor(call: IncrementThenClaimAllCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get percentageAllocation(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class IncrementThenClaimAllCall__Outputs {
  _call: IncrementThenClaimAllCall;

  constructor(call: IncrementThenClaimAllCall) {
    this._call = call;
  }
}

export class IncrementWindowCall extends ethereum.Call {
  get inputs(): IncrementWindowCall__Inputs {
    return new IncrementWindowCall__Inputs(this);
  }

  get outputs(): IncrementWindowCall__Outputs {
    return new IncrementWindowCall__Outputs(this);
  }
}

export class IncrementWindowCall__Inputs {
  _call: IncrementWindowCall;

  constructor(call: IncrementWindowCall) {
    this._call = call;
  }
}

export class IncrementWindowCall__Outputs {
  _call: IncrementWindowCall;

  constructor(call: IncrementWindowCall) {
    this._call = call;
  }
}

export class MintToAuctionForETHCall extends ethereum.Call {
  get inputs(): MintToAuctionForETHCall__Inputs {
    return new MintToAuctionForETHCall__Inputs(this);
  }

  get outputs(): MintToAuctionForETHCall__Outputs {
    return new MintToAuctionForETHCall__Outputs(this);
  }
}

export class MintToAuctionForETHCall__Inputs {
  _call: MintToAuctionForETHCall;

  constructor(call: MintToAuctionForETHCall) {
    this._call = call;
  }

  get mediaData(): MintToAuctionForETHCallMediaDataStruct {
    return changetype<MintToAuctionForETHCallMediaDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get bidShares(): MintToAuctionForETHCallBidSharesStruct {
    return changetype<MintToAuctionForETHCallBidSharesStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reservePrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class MintToAuctionForETHCall__Outputs {
  _call: MintToAuctionForETHCall;

  constructor(call: MintToAuctionForETHCall) {
    this._call = call;
  }
}

export class MintToAuctionForETHCallMediaDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class MintToAuctionForETHCallBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): MintToAuctionForETHCallBidSharesPrevOwnerStruct {
    return changetype<MintToAuctionForETHCallBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): MintToAuctionForETHCallBidSharesCreatorStruct {
    return changetype<MintToAuctionForETHCallBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): MintToAuctionForETHCallBidSharesOwnerStruct {
    return changetype<MintToAuctionForETHCallBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class MintToAuctionForETHCallBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintToAuctionForETHCallBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintToAuctionForETHCallBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraCall extends ethereum.Call {
  get inputs(): MintZoraCall__Inputs {
    return new MintZoraCall__Inputs(this);
  }

  get outputs(): MintZoraCall__Outputs {
    return new MintZoraCall__Outputs(this);
  }
}

export class MintZoraCall__Inputs {
  _call: MintZoraCall;

  constructor(call: MintZoraCall) {
    this._call = call;
  }

  get mediaData(): MintZoraCallMediaDataStruct {
    return changetype<MintZoraCallMediaDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get bidShares(): MintZoraCallBidSharesStruct {
    return changetype<MintZoraCallBidSharesStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class MintZoraCall__Outputs {
  _call: MintZoraCall;

  constructor(call: MintZoraCall) {
    this._call = call;
  }
}

export class MintZoraCallMediaDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class MintZoraCallBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): MintZoraCallBidSharesPrevOwnerStruct {
    return changetype<MintZoraCallBidSharesPrevOwnerStruct>(this[0].toTuple());
  }

  get creator(): MintZoraCallBidSharesCreatorStruct {
    return changetype<MintZoraCallBidSharesCreatorStruct>(this[1].toTuple());
  }

  get owner(): MintZoraCallBidSharesOwnerStruct {
    return changetype<MintZoraCallBidSharesOwnerStruct>(this[2].toTuple());
  }
}

export class MintZoraCallBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraCallBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraCallBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraWithSigCall extends ethereum.Call {
  get inputs(): MintZoraWithSigCall__Inputs {
    return new MintZoraWithSigCall__Inputs(this);
  }

  get outputs(): MintZoraWithSigCall__Outputs {
    return new MintZoraWithSigCall__Outputs(this);
  }
}

export class MintZoraWithSigCall__Inputs {
  _call: MintZoraWithSigCall;

  constructor(call: MintZoraWithSigCall) {
    this._call = call;
  }

  get creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mediaData(): MintZoraWithSigCallMediaDataStruct {
    return changetype<MintZoraWithSigCallMediaDataStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get bidShares(): MintZoraWithSigCallBidSharesStruct {
    return changetype<MintZoraWithSigCallBidSharesStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get sig(): MintZoraWithSigCallSigStruct {
    return changetype<MintZoraWithSigCallSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class MintZoraWithSigCall__Outputs {
  _call: MintZoraWithSigCall;

  constructor(call: MintZoraWithSigCall) {
    this._call = call;
  }
}

export class MintZoraWithSigCallMediaDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class MintZoraWithSigCallBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): MintZoraWithSigCallBidSharesPrevOwnerStruct {
    return changetype<MintZoraWithSigCallBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): MintZoraWithSigCallBidSharesCreatorStruct {
    return changetype<MintZoraWithSigCallBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): MintZoraWithSigCallBidSharesOwnerStruct {
    return changetype<MintZoraWithSigCallBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class MintZoraWithSigCallBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraWithSigCallBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraWithSigCallBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class MintZoraWithSigCallSigStruct extends ethereum.Tuple {
  get deadline(): BigInt {
    return this[0].toBigInt();
  }

  get v(): i32 {
    return this[1].toI32();
  }

  get r(): Bytes {
    return this[2].toBytes();
  }

  get s(): Bytes {
    return this[3].toBytes();
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get operator_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RemoveOwnerCall extends ethereum.Call {
  get inputs(): RemoveOwnerCall__Inputs {
    return new RemoveOwnerCall__Inputs(this);
  }

  get outputs(): RemoveOwnerCall__Outputs {
    return new RemoveOwnerCall__Outputs(this);
  }
}

export class RemoveOwnerCall__Inputs {
  _call: RemoveOwnerCall;

  constructor(call: RemoveOwnerCall) {
    this._call = call;
  }

  get prevOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveOwnerCall__Outputs {
  _call: RemoveOwnerCall;

  constructor(call: RemoveOwnerCall) {
    this._call = call;
  }
}

export class RemoveZoraMarketAskCall extends ethereum.Call {
  get inputs(): RemoveZoraMarketAskCall__Inputs {
    return new RemoveZoraMarketAskCall__Inputs(this);
  }

  get outputs(): RemoveZoraMarketAskCall__Outputs {
    return new RemoveZoraMarketAskCall__Outputs(this);
  }
}

export class RemoveZoraMarketAskCall__Inputs {
  _call: RemoveZoraMarketAskCall;

  constructor(call: RemoveZoraMarketAskCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveZoraMarketAskCall__Outputs {
  _call: RemoveZoraMarketAskCall;

  constructor(call: RemoveZoraMarketAskCall) {
    this._call = call;
  }
}

export class SetEditionMinterCall extends ethereum.Call {
  get inputs(): SetEditionMinterCall__Inputs {
    return new SetEditionMinterCall__Inputs(this);
  }

  get outputs(): SetEditionMinterCall__Outputs {
    return new SetEditionMinterCall__Outputs(this);
  }
}

export class SetEditionMinterCall__Inputs {
  _call: SetEditionMinterCall;

  constructor(call: SetEditionMinterCall) {
    this._call = call;
  }

  get minter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get allowed(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetEditionMinterCall__Outputs {
  _call: SetEditionMinterCall;

  constructor(call: SetEditionMinterCall) {
    this._call = call;
  }
}

export class SetEditionURLsCall extends ethereum.Call {
  get inputs(): SetEditionURLsCall__Inputs {
    return new SetEditionURLsCall__Inputs(this);
  }

  get outputs(): SetEditionURLsCall__Outputs {
    return new SetEditionURLsCall__Outputs(this);
  }
}

export class SetEditionURLsCall__Inputs {
  _call: SetEditionURLsCall;

  constructor(call: SetEditionURLsCall) {
    this._call = call;
  }

  get _imageUrl(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _animationUrl(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetEditionURLsCall__Outputs {
  _call: SetEditionURLsCall;

  constructor(call: SetEditionURLsCall) {
    this._call = call;
  }
}

export class SetZoraAuctionApprovalCall extends ethereum.Call {
  get inputs(): SetZoraAuctionApprovalCall__Inputs {
    return new SetZoraAuctionApprovalCall__Inputs(this);
  }

  get outputs(): SetZoraAuctionApprovalCall__Outputs {
    return new SetZoraAuctionApprovalCall__Outputs(this);
  }
}

export class SetZoraAuctionApprovalCall__Inputs {
  _call: SetZoraAuctionApprovalCall;

  constructor(call: SetZoraAuctionApprovalCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetZoraAuctionApprovalCall__Outputs {
  _call: SetZoraAuctionApprovalCall;

  constructor(call: SetZoraAuctionApprovalCall) {
    this._call = call;
  }
}

export class SetZoraAuctionReservePriceCall extends ethereum.Call {
  get inputs(): SetZoraAuctionReservePriceCall__Inputs {
    return new SetZoraAuctionReservePriceCall__Inputs(this);
  }

  get outputs(): SetZoraAuctionReservePriceCall__Outputs {
    return new SetZoraAuctionReservePriceCall__Outputs(this);
  }
}

export class SetZoraAuctionReservePriceCall__Inputs {
  _call: SetZoraAuctionReservePriceCall;

  constructor(call: SetZoraAuctionReservePriceCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get reservePrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetZoraAuctionReservePriceCall__Outputs {
  _call: SetZoraAuctionReservePriceCall;

  constructor(call: SetZoraAuctionReservePriceCall) {
    this._call = call;
  }
}

export class SetZoraMarketAskCall extends ethereum.Call {
  get inputs(): SetZoraMarketAskCall__Inputs {
    return new SetZoraMarketAskCall__Inputs(this);
  }

  get outputs(): SetZoraMarketAskCall__Outputs {
    return new SetZoraMarketAskCall__Outputs(this);
  }
}

export class SetZoraMarketAskCall__Inputs {
  _call: SetZoraMarketAskCall;

  constructor(call: SetZoraMarketAskCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ask(): SetZoraMarketAskCallAskStruct {
    return changetype<SetZoraMarketAskCallAskStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetZoraMarketAskCall__Outputs {
  _call: SetZoraMarketAskCall;

  constructor(call: SetZoraMarketAskCall) {
    this._call = call;
  }
}

export class SetZoraMarketAskCallAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }
}

export class SetZoraMarketBidSharesCall extends ethereum.Call {
  get inputs(): SetZoraMarketBidSharesCall__Inputs {
    return new SetZoraMarketBidSharesCall__Inputs(this);
  }

  get outputs(): SetZoraMarketBidSharesCall__Outputs {
    return new SetZoraMarketBidSharesCall__Outputs(this);
  }
}

export class SetZoraMarketBidSharesCall__Inputs {
  _call: SetZoraMarketBidSharesCall;

  constructor(call: SetZoraMarketBidSharesCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bidShares(): SetZoraMarketBidSharesCallBidSharesStruct {
    return changetype<SetZoraMarketBidSharesCallBidSharesStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetZoraMarketBidSharesCall__Outputs {
  _call: SetZoraMarketBidSharesCall;

  constructor(call: SetZoraMarketBidSharesCall) {
    this._call = call;
  }
}

export class SetZoraMarketBidSharesCallBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): SetZoraMarketBidSharesCallBidSharesPrevOwnerStruct {
    return changetype<SetZoraMarketBidSharesCallBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): SetZoraMarketBidSharesCallBidSharesCreatorStruct {
    return changetype<SetZoraMarketBidSharesCallBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): SetZoraMarketBidSharesCallBidSharesOwnerStruct {
    return changetype<SetZoraMarketBidSharesCallBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class SetZoraMarketBidSharesCallBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetZoraMarketBidSharesCallBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetZoraMarketBidSharesCallBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetupCall extends ethereum.Call {
  get inputs(): SetupCall__Inputs {
    return new SetupCall__Inputs(this);
  }

  get outputs(): SetupCall__Outputs {
    return new SetupCall__Outputs(this);
  }
}

export class SetupCall__Inputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }

  get owners_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetupCall__Outputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }
}

export class StartSplitPartyCall extends ethereum.Call {
  get inputs(): StartSplitPartyCall__Inputs {
    return new StartSplitPartyCall__Inputs(this);
  }

  get outputs(): StartSplitPartyCall__Outputs {
    return new StartSplitPartyCall__Outputs(this);
  }
}

export class StartSplitPartyCall__Inputs {
  _call: StartSplitPartyCall;

  constructor(call: StartSplitPartyCall) {
    this._call = call;
  }

  get marketWrapper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nftContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get auctionId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[4].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class StartSplitPartyCall__Outputs {
  _call: StartSplitPartyCall;

  constructor(call: StartSplitPartyCall) {
    this._call = call;
  }
}

export class SwapOwnerCall extends ethereum.Call {
  get inputs(): SwapOwnerCall__Inputs {
    return new SwapOwnerCall__Inputs(this);
  }

  get outputs(): SwapOwnerCall__Outputs {
    return new SwapOwnerCall__Outputs(this);
  }
}

export class SwapOwnerCall__Inputs {
  _call: SwapOwnerCall;

  constructor(call: SwapOwnerCall) {
    this._call = call;
  }

  get prevOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get oldOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SwapOwnerCall__Outputs {
  _call: SwapOwnerCall;

  constructor(call: SwapOwnerCall) {
    this._call = call;
  }
}

export class TokensReceivedCall extends ethereum.Call {
  get inputs(): TokensReceivedCall__Inputs {
    return new TokensReceivedCall__Inputs(this);
  }

  get outputs(): TokensReceivedCall__Outputs {
    return new TokensReceivedCall__Outputs(this);
  }
}

export class TokensReceivedCall__Inputs {
  _call: TokensReceivedCall;

  constructor(call: TokensReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get value5(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class TokensReceivedCall__Outputs {
  _call: TokensReceivedCall;

  constructor(call: TokensReceivedCall) {
    this._call = call;
  }
}

export class UntrustedBurn721Call extends ethereum.Call {
  get inputs(): UntrustedBurn721Call__Inputs {
    return new UntrustedBurn721Call__Inputs(this);
  }

  get outputs(): UntrustedBurn721Call__Outputs {
    return new UntrustedBurn721Call__Outputs(this);
  }
}

export class UntrustedBurn721Call__Inputs {
  _call: UntrustedBurn721Call;

  constructor(call: UntrustedBurn721Call) {
    this._call = call;
  }

  get tokenContract_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UntrustedBurn721Call__Outputs {
  _call: UntrustedBurn721Call;

  constructor(call: UntrustedBurn721Call) {
    this._call = call;
  }
}

export class UntrustedSafeTransfer721Call extends ethereum.Call {
  get inputs(): UntrustedSafeTransfer721Call__Inputs {
    return new UntrustedSafeTransfer721Call__Inputs(this);
  }

  get outputs(): UntrustedSafeTransfer721Call__Outputs {
    return new UntrustedSafeTransfer721Call__Outputs(this);
  }
}

export class UntrustedSafeTransfer721Call__Inputs {
  _call: UntrustedSafeTransfer721Call;

  constructor(call: UntrustedSafeTransfer721Call) {
    this._call = call;
  }

  get tokenContract_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UntrustedSafeTransfer721Call__Outputs {
  _call: UntrustedSafeTransfer721Call;

  constructor(call: UntrustedSafeTransfer721Call) {
    this._call = call;
  }
}

export class UntrustedSetApproval721Call extends ethereum.Call {
  get inputs(): UntrustedSetApproval721Call__Inputs {
    return new UntrustedSetApproval721Call__Inputs(this);
  }

  get outputs(): UntrustedSetApproval721Call__Outputs {
    return new UntrustedSetApproval721Call__Outputs(this);
  }
}

export class UntrustedSetApproval721Call__Inputs {
  _call: UntrustedSetApproval721Call;

  constructor(call: UntrustedSetApproval721Call) {
    this._call = call;
  }

  get tokenContract_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get operator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get approved_(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class UntrustedSetApproval721Call__Outputs {
  _call: UntrustedSetApproval721Call;

  constructor(call: UntrustedSetApproval721Call) {
    this._call = call;
  }
}

export class UpdateZoraMediaMetadataURICall extends ethereum.Call {
  get inputs(): UpdateZoraMediaMetadataURICall__Inputs {
    return new UpdateZoraMediaMetadataURICall__Inputs(this);
  }

  get outputs(): UpdateZoraMediaMetadataURICall__Outputs {
    return new UpdateZoraMediaMetadataURICall__Outputs(this);
  }
}

export class UpdateZoraMediaMetadataURICall__Inputs {
  _call: UpdateZoraMediaMetadataURICall;

  constructor(call: UpdateZoraMediaMetadataURICall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateZoraMediaMetadataURICall__Outputs {
  _call: UpdateZoraMediaMetadataURICall;

  constructor(call: UpdateZoraMediaMetadataURICall) {
    this._call = call;
  }
}

export class UpdateZoraMediaTokenURICall extends ethereum.Call {
  get inputs(): UpdateZoraMediaTokenURICall__Inputs {
    return new UpdateZoraMediaTokenURICall__Inputs(this);
  }

  get outputs(): UpdateZoraMediaTokenURICall__Outputs {
    return new UpdateZoraMediaTokenURICall__Outputs(this);
  }
}

export class UpdateZoraMediaTokenURICall__Inputs {
  _call: UpdateZoraMediaTokenURICall;

  constructor(call: UpdateZoraMediaTokenURICall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateZoraMediaTokenURICall__Outputs {
  _call: UpdateZoraMediaTokenURICall;

  constructor(call: UpdateZoraMediaTokenURICall) {
    this._call = call;
  }
}

export class UpdateZoraMediaURIsCall extends ethereum.Call {
  get inputs(): UpdateZoraMediaURIsCall__Inputs {
    return new UpdateZoraMediaURIsCall__Inputs(this);
  }

  get outputs(): UpdateZoraMediaURIsCall__Outputs {
    return new UpdateZoraMediaURIsCall__Outputs(this);
  }
}

export class UpdateZoraMediaURIsCall__Inputs {
  _call: UpdateZoraMediaURIsCall;

  constructor(call: UpdateZoraMediaURIsCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateZoraMediaURIsCall__Outputs {
  _call: UpdateZoraMediaURIsCall;

  constructor(call: UpdateZoraMediaURIsCall) {
    this._call = call;
  }
}
